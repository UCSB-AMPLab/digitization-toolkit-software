[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Digitization Toolkit Documentation",
    "section": "",
    "text": "Welcome to the Digitization Toolkit Documentation! This site provides comprehensive guides and references for setting up and using the Digitization Toolkit software and hardware components.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#available-documentation",
    "href": "index.html#available-documentation",
    "title": "Digitization Toolkit Documentation",
    "section": "Available Documentation",
    "text": "Available Documentation\n\nDeveloper Guides\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Guide\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nGuide\n\n\nLast Updated\n\n\n\n\n\n\nRaspberry Pi 5 IMX519 Camera Setup\n\n\nSep 27, 2025\n\n\n\n\nRaspberry Pi Compute Module 4 Dual Camera Setup\n\n\nSep 27, 2025\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "developers/device_setup_CM4.html",
    "href": "developers/device_setup_CM4.html",
    "title": "Raspberry Pi Compute Module 4 Dual Camera Setup",
    "section": "",
    "text": "This guide explains how to connect and configure two cameras on the Raspberry Pi CM4 IO Board, and how to test simultaneous still captures with shell scripts.",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi CM4 with Cameras"
    ]
  },
  {
    "objectID": "developers/device_setup_CM4.html#hardware-setup",
    "href": "developers/device_setup_CM4.html#hardware-setup",
    "title": "Raspberry Pi Compute Module 4 Dual Camera Setup",
    "section": "1. Hardware Setup",
    "text": "1. Hardware Setup\nRequired Hardware\n\nRaspberry Pi Compute Module 4 (CM4)\nCM4 IO Board\n2 × Arducam 64MP (or other libcamera-compatible CSI-2 cameras)\n2 × CSI ribbon cables\n2 × jumper caps\n\nStep 1: Attach the cameras\n\nPlug one ribbon cable into CAM0 (near the HDMI ports).\nPlug the other into CAM1 (near the USB ports).\nEnsure the ribbon contacts face the correct orientation (usually silver contacts toward the HDMI/USB connectors).\n\nStep 2: Add J6 jumpers\n\nLocate header J6 on the IO board.\nPlace two jumper caps in a vertical orientation (bridging the same column).\nThis connects I²C and control lines for CAM0.\n\n\n\n\nalt\n\n\nStep 3: Boot the system and check I²C\nInstall i2c-tools if not already present:\nsudo apt-get update\nsudo apt-get install -y i2c-tools\nList buses:\ni2cdetect -l\nYou should see:\n\ni2c-0 → mux channel 0\ni2c-10 → mux channel 1\n\nProbe each:\nsudo i2cdetect -y 0\nsudo i2cdetect -y 10\nEach should show 0x1a (camera sensor) and 0x0c (VCM driver).",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi CM4 with Cameras"
    ]
  },
  {
    "objectID": "developers/device_setup_CM4.html#firmware-configuration",
    "href": "developers/device_setup_CM4.html#firmware-configuration",
    "title": "Raspberry Pi Compute Module 4 Dual Camera Setup",
    "section": "2. Firmware Configuration",
    "text": "2. Firmware Configuration\nStep 1: Disable auto-detect\nEdit /boot/firmware/config.txt:\nsudo nano /boot/firmware/config.txt\nAdd at the end:\ncamera_auto_detect=0\ndtoverlay=arducam-64mp,cam0   # enables CAM0\ndtoverlay=arducam-64mp        # enables CAM1\nSave and reboot\nsudo reboot\nStep 2: Verify cameras\nAfter reboot\nrpicam-hello --list\nExpected output: two cameras listed",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi CM4 with Cameras"
    ]
  },
  {
    "objectID": "developers/device_setup_CM4.html#test-cameras",
    "href": "developers/device_setup_CM4.html#test-cameras",
    "title": "Raspberry Pi Compute Module 4 Dual Camera Setup",
    "section": "3. Test Cameras",
    "text": "3. Test Cameras\nTest Single Camera\nTry a preview:\nrpicam-hello --camera 0 -t 2000\nrpicam-hello --camera 1 -t 2000\nCapture stills\nrpicam-still --camera 0 -o cam0.jpg\nrpicam-still --camera 1 -o cam1.jpg\nTest Dual Camera Capture\nThis script tries both cameras at once. If high resolution fails, it falls back to lower resolutions.\nSave as dual_snap.sh:\n#!/usr/bin/env bash\nset -euo pipefail\nOUTDIR=\"${1:-captures}\"\nmkdir -p \"$OUTDIR\"\n\nSIZES=(\"4624x3472\" \"3840x2160\" \"2312x1736\")\nTIMEOUT_MS=1500\nEXTRA_OPTS=\"--thumb none --buffer-count 2\"\n\nSTAMP=\"$(date +'%Y%m%d_%H%M%S_%3N')\"\nF0=\"$OUTDIR/${STAMP}_cam0.jpg\"\nF1=\"$OUTDIR/${STAMP}_cam1.jpg\"\n\ntry_capture () {\n  local W=\"${1%x*}\" H=\"${1#*x}\"\n  echo \"Trying $W x $H ...\"\n  rpicam-still --camera 0 -t \"$TIMEOUT_MS\" -n --width \"$W\" --height \"$H\" -o \"$F0\" $EXTRA_OPTS &\n  PID0=$!\n  sleep 0.02\n  rpicam-still --camera 1 -t \"$TIMEOUT_MS\" -n --width \"$W\" --height \"$H\" -o \"$F1\" $EXTRA_OPTS &\n  PID1=$!\n  wait \"$PID0\" && wait \"$PID1\"\n}\n\nfor sz in \"${SIZES[@]}\"; do\n  if try_capture \"$sz\"; then\n    echo \"Success at $sz\"\n    echo \"Saved:\"\n    echo \"  $F0\"\n    echo \"  $F1\"\n    exit 0\n  fi\ndone\nUsage:\nchmod +x dual_snap.sh\n./dual_snap.sh",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi CM4 with Cameras"
    ]
  },
  {
    "objectID": "developers/device_setup_CM4.html#tips-troubleshooting",
    "href": "developers/device_setup_CM4.html#tips-troubleshooting",
    "title": "Raspberry Pi Compute Module 4 Dual Camera Setup",
    "section": "Tips & Troubleshooting",
    "text": "Tips & Troubleshooting\n\nMemory errors: capturing two full-res images in parallel may fail. Stick to 3840×2160 for stability.\nPermissions: ensure your user is in the video group:\n\nsudo usermod -aG video $USER\n\nColor/exposure match: use fixed settings:\n\nEXTRA_OPTS=\"--shutter 10000 --gain 1.5 --awbgains 2.0,1.5\"\n\nTruly simultaneous capture: requires external trigger/sync hardware. Software methods give ms-level offsets.",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi CM4 with Cameras"
    ]
  },
  {
    "objectID": "developers/device_setup_pi5_imx519.html",
    "href": "developers/device_setup_pi5_imx519.html",
    "title": "Raspberry Pi 5 IMX519 Camera Setup",
    "section": "",
    "text": "This guide explains how to connect and configure the Arducam IMX519 camera on the Raspberry Pi 5, and how to test still captures using shell scripts.",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi 5 with IMX519 Camera"
    ]
  },
  {
    "objectID": "developers/device_setup_pi5_imx519.html#tested-hardware",
    "href": "developers/device_setup_pi5_imx519.html#tested-hardware",
    "title": "Raspberry Pi 5 IMX519 Camera Setup",
    "section": "Tested Hardware",
    "text": "Tested Hardware\n\nRaspberry Pi 5 – 8GB RAM\nArducam IMX519 Camera Module, SKU: B0371 x 2\nCSI 22-to-22-pin Ribbon Cable (15 cm or 20 cm recommended) x 2\nRaspberry Pi Official Power Supply (5V/3A or higher, 27 W PSU recommended)\nmicroSD Card 16 GB with Raspberry Pi OS Lite (64-bit) installed\n\nInitial setup steps for Raspberry Pi OS can be found in the Raspberry Pi Documentation.",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi 5 with IMX519 Camera"
    ]
  },
  {
    "objectID": "developers/device_setup_pi5_imx519.html#hardware-connection",
    "href": "developers/device_setup_pi5_imx519.html#hardware-connection",
    "title": "Raspberry Pi 5 IMX519 Camera Setup",
    "section": "1. Hardware Connection",
    "text": "1. Hardware Connection\nFor camera connection we followed the Arducam Quick Start Guide for Hardware Setup.\n\nCamera Connection\n\n\n\nCamera Connection\n\n\nThe actual camera connection looks like this:\n\n\n\nCamera Connection Actual\n\n\nMake sure the ribbon cable is properly seated in the connector with the blue stiffener facing outward (toward the Ethernet port) and the metal contacts facing inward toward the board.\n\n\nDual Camera Connection on Raspberry Pi 5\nThe Raspberry Pi 5 includes two CSI connectors labeled CAM0 and CAM1. Connect one camera to each port using 22-pin ribbons.\n\nBoth ports require the cable’s metal contacts to face the Ethernet port.\n\n\n\n\nDual Camera Connection\n\n\n\n\nFinal Assembly\nAfter connecting the cameras, ensure everything is securely in place. Attach any necessary heatsinks or cooling solutions, and insert the microSD card with Raspberry Pi OS installed. Finally, connect the power supply to boot up the Raspberry Pi 5. Attach peripherals (keyboard, mouse, monitor) or set up SSH for headless operation.\n\n\n\nFinal Assembly",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi 5 with IMX519 Camera"
    ]
  },
  {
    "objectID": "developers/device_setup_pi5_imx519.html#software-setup",
    "href": "developers/device_setup_pi5_imx519.html#software-setup",
    "title": "Raspberry Pi 5 IMX519 Camera Setup",
    "section": "2. Software Setup",
    "text": "2. Software Setup\nFor this step, we followed the Arducam IMX519 Software Setup Guide, specifically the instructions for Raspberry Pi Bullseye OS 6.1.21 and Later / Bookworm OS.\n\nNote on software stacks: Raspberry Pi’s official rpicam-apps are generally preferred for Pi 5, but in our tests they did not successfully detect the IMX519. The method below, using Arducam’s packages, worked reliably. Other setups may succeed with rpicam-apps, but this guide documents the tested path.\n\nStep 1: Download the bash script\nwget -O install_pivariety_pkgs.sh https://github.com/ArduCAM/Arducam-Pivariety-V4L2-Driver/releases/download/install_script/install_pivariety_pkgs.sh\n\nchmod +x install_pivariety_pkgs.sh\nStep 2: Install libcamera\n./install_pivariety_pkgs.sh -p libcamera_dev\nStep 3: Install libcamera-apps\n./install_pivariety_pkgs.sh -p libcamera_apps\nStep 4: Modify the boot configuration\nsudo nano /boot/firmware/config.txt\nAdd or modify the following:\n# Disable auto-detect (doesn’t catch third-party sensors reliably)\ncamera_auto_detect=0\n\n[all]\ndtoverlay=imx519,cam0\ndtoverlay=imx519\n\nThe first line (imx519,cam0) explicitly enables CAM0. The second (imx519) allows the kernel to probe CAM1 automatically. Both are needed for dual-camera setups.\n\nOptional: enable debug logging:\ndtdebug=1\nSave and reboot:\nsudo reboot",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi 5 with IMX519 Camera"
    ]
  },
  {
    "objectID": "developers/device_setup_pi5_imx519.html#verify-camera-detection",
    "href": "developers/device_setup_pi5_imx519.html#verify-camera-detection",
    "title": "Raspberry Pi 5 IMX519 Camera Setup",
    "section": "3. Verify Camera Detection",
    "text": "3. Verify Camera Detection\nAfter rebooting:\nrpicam-hello --list-cameras\nExpected output (dual IMX519s):\nAvailable cameras\n-----------------\n0 : imx519 [4656x3496 …] (/base/axi/pcie@…/i2c@88000/imx519@1a)\n1 : imx519 [4656x3496 …] (/base/axi/pcie@…/i2c@80000/imx519@1a)\nIf you want to confirm the media graph:\nv4l2-ctl --list-devices\nmedia-ctl -p",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi 5 with IMX519 Camera"
    ]
  },
  {
    "objectID": "developers/device_setup_pi5_imx519.html#test-cameras",
    "href": "developers/device_setup_pi5_imx519.html#test-cameras",
    "title": "Raspberry Pi 5 IMX519 Camera Setup",
    "section": "4. Test Cameras",
    "text": "4. Test Cameras\nPreview from each camera\nrpicam-hello --camera 0 -t 5000\nrpicam-hello --camera 1 -t 5000\nCapture a still image\nrpicam-jpeg --camera 0 -o cam0.jpg\nrpicam-jpeg --camera 1 -o cam1.jpg\nRecord short video\nrpicam-vid --camera 0 -t 10000 -o cam0.h264\nrpicam-vid --camera 1 -t 10000 -o cam1.h264",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi 5 with IMX519 Camera"
    ]
  },
  {
    "objectID": "developers/device_setup_pi5_imx519.html#troubleshooting",
    "href": "developers/device_setup_pi5_imx519.html#troubleshooting",
    "title": "Raspberry Pi 5 IMX519 Camera Setup",
    "section": "5. Troubleshooting",
    "text": "5. Troubleshooting\n\nError -5: failed to read chip id → Sensor not responding on I²C\n\nReseat ribbon, check orientation.\nEnsure latch is fully closed.\nTry swapping CAM0 ↔︎ CAM1.\n\nOnly one camera detected → Confirm both dtoverlay lines exist. Swap modules/cables to isolate the fault.\nNo /dev/video0 → Driver didn’t bind sensor. Check logs:\ndmesg | grep imx\nCheck power health →\nvcgencmd get_throttled\n0x0 = healthy. Non-zero means undervoltage; use official PSU.\nEnable debug logs (if dtdebug=1 is set):\ndmesg | grep -i imx\nsudo vcdbg log msg",
    "crumbs": [
      "Developer Guides",
      "Hardware Setup Guides",
      "Device Setup: Raspberry Pi 5 with IMX519 Camera"
    ]
  }
]